{
  "techs": [
    {
      "id": "1",
      "name": "HTML5",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/html5/html5-original.svg",
      "skills": [
        "Structuring page content",
        "Using semantic tags",
        "Accessibility (a11y)",
        "Basic SEO"
      ]
    },
    {
      "id": "2",
      "name": "CSS3",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/css3/css3-original.svg",
      "skills": [
        "Responsive design with flexbox and grid",
        "Animations and transitions",
        "Preprocessors (SCSS)",
        "Creating complex layouts"
      ]
    },
    {
      "id": "3",
      "name": "JavaScript",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/javascript/javascript-original.svg",
      "skills": [
        "DOM manipulation",
        "ES6+ (let, const, arrow functions, etc.)",
        "Asynchronous programming (promises, async/await)",
        "Event handling"
      ]
    },
    {
      "id": "4",
      "name": "React",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/react/react-original.svg",
      "skills": [
        "Creating reusable components",
        "State management with hooks",
        "Page routing with React Router",
        "API interoperability"
      ]
    },
    {
      "id": "5",
      "name": "Node.js",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/nodejs/nodejs-original.svg",
      "skills": [
        "Server creation with Express",
        "File management and I/O operations",
        "Authentication (JWT, cookies)",
        "RESTful API development"
      ]
    },
    {
      "id": "6",
      "name": "MongoDB",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/mongodb/mongodb-original.svg",
      "skills": [
        "Creating and managing collections",
        "Data modeling with Mongoose",
        "CRUD operations",
        "Query optimization for performance"
      ]
    },
    {
      "id": "7",
      "name": "Postman",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/postman/postman-original.svg",
      "skills": [
        "API testing and debugging",
        "Automated testing",
        "Environment management",
        "Creating request collections"
      ]
    }
  ],
  "works": [
    {
      "id": "101",
      "title": "React - A Real Estate App",
      "cover": "/images/work/React/accueil.jpg",
      "samples": [
        {
          "image": "/images/work/React/fichelogement.jpg",
          "comment": "Designing a scalable SPA required structuring reusable layouts and components, which improved the application's organization and maintainability."
        },
        {
          "image": "/images/work/React/erreur.jpg",
          "comment": "Building robust navigation with React Router allowed me to handle dynamic parameters for content generation and implement an error gateway for invalid routes."
        },
        {
          "image": "/images/work/React/scss.jpg",
          "comment": "To handle complex designs efficiently, I learned SCSS for creating dynamic styles and animations driven by state changes, which made my components more interactive."
        },        
        {
          "image": "/images/work/React/collapse.jpg",
          "comment": "Creating a reusable dynamic collapse component challenged me to master state and props management, ensuring flexibility for future use."
        }
        
      ],
      "description": "I learned React by building a single-page application for real estate rentals. Its structure relies on hooks and state management.",
      "link": "https://github.com/Bourrelet/kaza-eva"
    },
    {
      "id": "102",
      "title": "JavaScript - A Space Designer Portfolio",
      "cover": "/images/work/javascript/post.jpg",
      "samples": [
        {
          "image": "/images/work/javascript/login.jpg",
          "comment": "Managing access to protected CRUD operations taught me how to handle authentication tokens by securely storing them and including them in requests."
        },
        {
          "image": "/images/work/javascript/cover.jpg",
          "comment": "Generating a dynamic gallery from API data without page reloads taught me to master asynchronous JavaScript with fetch and async/await."
        },
        {
          "image": "/images/work/javascript/delete.jpg",
          "comment": "Creating modals for CRUD actions challenged me to perform complex DOM manipulations to handle their behavior and dynamic updates."
        },
        {
          "image": "/images/work/javascript/fullJS.jpg",
          "comment": "Developing the entire frontend from scratch using vanilla JavaScript helped me strengthen my skills in DOM manipulation and REST API integration."
        }
      ],
      "description": "This project involved creating a dynamic frontend portfolio using basic CRUD requests to interact with a REST API.",
      "link": "https://github.com/Bourrelet/Portfolio-architecte-sophie-bluel"
    },
    {
      "id": "103",
      "title": "Node - A Book Directory Backend Project",
      "cover": "/images/work/nodejs/cover.jpg",
      "samples": [
        {
          "image": "/images/work/nodejs/update.jpg",
          "comment": "I structured my backend into modules to handle requests step by step, enabling all CRUD operations, including those with authentication and data manipulation."
        },
        {
          "image": "/images/work/nodejs/mongoDB.jpg",
          "comment": "To ensure a secured configuration, I set up the database using environment variables. I also implemented systematic business logic to reduce unnecessary load on the database."
        },
        {
          "image": "/images/work/nodejs/addbook.jpg",
          "comment": "Managing parallel synchronous operations required optimizing workflows with clean, well-structured code to handle the complexity effectively."
        }
      ],
      "description": "I built a secure API with user authentication and MongoDB data management, based on a technical specifications document.",
      "link": "https://github.com/Bourrelet/P7-Dev-Web-livres"
    }
  ]
}
