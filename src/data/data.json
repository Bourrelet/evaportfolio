{
  "techs": [
    {
      "id": "1",
      "name": "HTML5",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/html5/html5-original.svg",
      "skills": [
        "Structuring page content",
        "Using semantic tags",
        "Accessibility (a11y)",
        "Basic SEO"
      ]
    },
    {
      "id": "2",
      "name": "CSS3",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/css3/css3-original.svg",
      "skills": [
        "Responsive design with flexbox and grid",
        "Animations and transitions",
        "Preprocessors (SCSS)",
        "Creating complex layouts"
      ]
    },
    {
      "id": "3",
      "name": "JavaScript",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/javascript/javascript-original.svg",
      "skills": [
        "DOM manipulation",
        "ES6+ (let, const, arrow functions, etc.)",
        "Asynchronous programming (promises, async/await)",
        "Event handling"
      ]
    },
    {
      "id": "4",
      "name": "React",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/react/react-original.svg",
      "skills": [
        "Creating reusable components",
        "State management with hooks",
        "Page routing with React Router",
        "API interoperability"
      ]
    },
    {
      "id": "5",
      "name": "Node.js",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/nodejs/nodejs-original.svg",
      "skills": [
        "Server creation with Express",
        "File management and I/O operations",
        "Authentication (JWT, cookies)",
        "RESTful API development"
      ]
    },
    {
      "id": "6",
      "name": "MongoDB",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/mongodb/mongodb-original.svg",
      "skills": [
        "Creating and managing collections",
        "Data modeling with Mongoose",
        "CRUD operations",
        "Query optimization for performance"
      ]
    },
    {
      "id": "7",
      "name": "Postman",
      "logo": "https://cdn.jsdelivr.net/gh/devicons/devicon@latest/icons/postman/postman-original.svg",
      "skills": [
        "API testing and debugging",
        "Automated testing",
        "Environment management",
        "Creating request collections"
      ]
    }
  ],
  "works": [
    {
      "id": "101",
      "title": "React - A Real Estate App",
      "cover": "/images/work/React/accueil.jpg",
      "samples": [
        {
          "image": "/images/work/React/fichelogement.jpg",
          "comment": "This app features interactive custom components, some animated with dynamic classes, like a dropdown menu or a carousel."
        },
        {
          "image": "/images/work/React/erreur.jpg",
          "comment": "Dynamic routing handles parameters, enabling navigation to an error page for invalid access. The app was built mobile-first and is fully responsive."
        }
      ],
      "description": "I learned React by building a single-page application for real estate rentals. Its structure relies on hooks and state management.",
      "link": "https://github.com/Bourrelet/kaza-eva"
    },
    {
      "id": "102",
      "title": "JavaScript - A Space Designer Portfolio",
      "cover": "/images/work/javascript/post.jpg",
      "samples": [
        {
          "image": "/images/work/javascript/login.jpg",
          "comment": "The project includes login functionality with token management."
        },
        {
          "image": "/images/work/javascript/cover.jpg",
          "comment": "On the landing page, the gallery is dynamically generated from the backend without any page reloading."
        },
        {
          "image": "/images/work/javascript/delete.jpg",
          "comment": "POST and DELETE requests are accessible via modals for logged-in users only."
        },
        {
          "image": "/images/work/javascript/fullJS.jpg",
          "comment": "I built the entire website frontend using only JavaScript, with no frameworks or libraries."
        }
      ],
      "description": "This project involved creating a dynamic frontend portfolio using basic CRUD requests to interact with a REST API.",
      "link": "https://github.com/Bourrelet/Portfolio-architecte-sophie-bluel"
    },
    {
      "id": "103",
      "title": "Node - A Book Directory Backend Project",
      "cover": "/images/work/nodejs/cover.jpg",
      "samples": [
        {
          "image": "/images/work/nodejs/update.jpg",
          "comment": "I implemented all possible CRUD interactions between the frontend and database, using JWT for secure user authentication and data management."
        },
        {
          "image": "/images/work/nodejs/MongoDB.jpg",
          "comment": "I completed all database setup steps, including model creation and security configurations."
        },
        {
          "image": "/images/work/nodejs/addbook.jpg",
          "comment": "I organized the backend repository with a clear structure, including middleware, error handling, backend routes, and controllers."
        }
      ],
      "description": "I built a secure API with user authentication and MongoDB data management, based on a technical specifications document.",
      "link": "https://github.com/Bourrelet/P7-Dev-Web-livres"
    }
  ]
}
